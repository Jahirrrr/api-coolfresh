/*!
  * Bootstrap v4.2.1 (https://getbootstrap.com/)
  * Copyright 2011-2018 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
  */
!(function (t, e) { typeof exports === 'object' && typeof module !== 'undefined' ? e(exports, require('popper.js'), require('jquery')) : typeof define === 'function' && define.amd ? define(['exports', 'popper.js', 'jquery'], e) : e(t.bootstrap = {}, t.Popper, t.jQuery); }(this, (t, u, g) => {
    function i(t, e) { for (let n = 0; n < e.length; n++) { const i = e[n]; i.enumerable = i.enumerable || !1, i.configurable = !0, 'value' in i && (i.writable = !0), Object.defineProperty(t, i.key, i); } } function s(t, e, n) { return e && i(t.prototype, e), n && i(t, n), t; } function l(o) {
        for (let t = 1; t < arguments.length; t++) {
            var r = arguments[t] != null ? arguments[t] : {},
                e = Object.keys(r); typeof Object.getOwnPropertySymbols === 'function' && (e = e.concat(Object.getOwnPropertySymbols(r).filter(t => Object.getOwnPropertyDescriptor(r, t).enumerable))), e.forEach((t) => {
                let e,
                    n,
                    i; e = o, i = r[n = t], n in e ? Object.defineProperty(e, n, {
                    value: i, enumerable: !0, configurable: !0, writable: !0,
                }) : e[n] = i;
            });
        } return o;
    }u = u && u.hasOwnProperty('default') ? u.default : u, g = g && g.hasOwnProperty('default') ? g.default : g; const e = 'transitionend'; function n(t) {
        let e = this,
            n = !1; return g(this).one(_.TRANSITION_END, () => { n = !0; }), setTimeout(() => { n || _.triggerTransitionEnd(e); }, t), this;
    } var _ = {
        TRANSITION_END: 'bsTransitionEnd',
        getUID(t) { for (;t += ~~(1e6 * Math.random()), document.getElementById(t););return t; },
        getSelectorFromElement(t) { let e = t.getAttribute('data-target'); if (!e || e === '#') { const n = t.getAttribute('href'); e = n && n !== '#' ? n.trim() : ''; } return e && document.querySelector(e) ? e : null; },
        getTransitionDurationFromElement(t) {
            if (!t) return 0; let e = g(t).css('transition-duration'),
                n = g(t).css('transition-delay'),
                i = parseFloat(e),
                o = parseFloat(n); return i || o ? (e = e.split(',')[0], n = n.split(',')[0], 1e3 * (parseFloat(e) + parseFloat(n))) : 0;
        },
        reflow(t) { return t.offsetHeight; },
        triggerTransitionEnd(t) { g(t).trigger(e); },
        supportsTransitionEnd() { return Boolean(e); },
        isElement(t) { return (t[0] || t).nodeType; },
        typeCheckConfig(t, e, n) {
            for (const i in n) {
                if (Object.prototype.hasOwnProperty.call(n, i)) {
                    let o = n[i],
                        r = e[i],
                        s = r && _.isElement(r) ? 'element' : (a = r, {}.toString.call(a).match(/\s([a-z]+)/i)[1].toLowerCase()); if (!new RegExp(o).test(s)) throw new Error(`${t.toUpperCase()}: Option "${i}" provided type "${s}" but expected type "${o}".`);
                }
            } let a;
        },
        findShadowRoot(t) { if (!document.documentElement.attachShadow) return null; if (typeof t.getRootNode !== 'function') return t instanceof ShadowRoot ? t : t.parentNode ? _.findShadowRoot(t.parentNode) : null; const e = t.getRootNode(); return e instanceof ShadowRoot ? e : null; },
    }; g.fn.emulateTransitionEnd = n, g.event.special[_.TRANSITION_END] = { bindType: e, delegateType: e, handle(t) { if (g(t.target).is(this)) return t.handleObj.handler.apply(this, arguments); } }; let o = 'alert',
        r = 'bs.alert',
        a = `.${r}`,
        c = g.fn[o],
        h = { CLOSE: `close${a}`, CLOSED: `closed${a}`, CLICK_DATA_API: `click${a}.data-api` },
        f = 'alert',
        d = 'fade',
        m = 'show',
        p = (function () {
            function i(t) { this._element = t; } const t = i.prototype; return t.close = function (t) { let e = this._element; t && (e = this._getRootElement(t)), this._triggerCloseEvent(e).isDefaultPrevented() || this._removeElement(e); }, t.dispose = function () { g.removeData(this._element, r), this._element = null; }, t._getRootElement = function (t) {
                let e = _.getSelectorFromElement(t),
                    n = !1; return e && (n = document.querySelector(e)), n || (n = g(t).closest(`.${f}`)[0]), n;
            }, t._triggerCloseEvent = function (t) { const e = g.Event(h.CLOSE); return g(t).trigger(e), e; }, t._removeElement = function (e) { const n = this; if (g(e).removeClass(m), g(e).hasClass(d)) { const t = _.getTransitionDurationFromElement(e); g(e).one(_.TRANSITION_END, t => n._destroyElement(e, t)).emulateTransitionEnd(t); } else this._destroyElement(e); }, t._destroyElement = function (t) { g(t).detach().trigger(h.CLOSED).remove(); }, i._jQueryInterface = function (n) {
                return this.each(function () {
                    let t = g(this),
                        e = t.data(r); e || (e = new i(this), t.data(r, e)), n === 'close' && e[n](this);
                });
            }, i._handleDismiss = function (e) { return function (t) { t && t.preventDefault(), e.close(this); }; }, s(i, null, [{ key: 'VERSION', get() { return '4.2.1'; } }]), i;
        }()); g(document).on(h.CLICK_DATA_API, '[data-dismiss="alert"]', p._handleDismiss(new p())), g.fn[o] = p._jQueryInterface, g.fn[o].Constructor = p, g.fn[o].noConflict = function () { return g.fn[o] = c, p._jQueryInterface; }; let v = 'button',
        E = 'bs.button',
        y = `.${E}`,
        C = '.data-api',
        T = g.fn[v],
        S = 'active',
        b = 'btn',
        I = 'focus',
        D = '[data-toggle^="button"]',
        w = '[data-toggle="buttons"]',
        A = 'input:not([type="hidden"])',
        N = '.active',
        O = '.btn',
        k = { CLICK_DATA_API: `click${y}${C}`, FOCUS_BLUR_DATA_API: `focus${y}${C} blur${y}${C}` },
        P = (function () {
            function n(t) { this._element = t; } const t = n.prototype; return t.toggle = function () {
                let t = !0,
                    e = !0,
                    n = g(this._element).closest(w)[0]; if (n) { const i = this._element.querySelector(A); if (i) { if (i.type === 'radio') if (i.checked && this._element.classList.contains(S))t = !1; else { const o = n.querySelector(N); o && g(o).removeClass(S); } if (t) { if (i.hasAttribute('disabled') || n.hasAttribute('disabled') || i.classList.contains('disabled') || n.classList.contains('disabled')) return; i.checked = !this._element.classList.contains(S), g(i).trigger('change'); }i.focus(), e = !1; } }e && this._element.setAttribute('aria-pressed', !this._element.classList.contains(S)), t && g(this._element).toggleClass(S);
            }, t.dispose = function () { g.removeData(this._element, E), this._element = null; }, n._jQueryInterface = function (e) { return this.each(function () { let t = g(this).data(E); t || (t = new n(this), g(this).data(E, t)), e === 'toggle' && t[e](); }); }, s(n, null, [{ key: 'VERSION', get() { return '4.2.1'; } }]), n;
        }()); g(document).on(k.CLICK_DATA_API, D, (t) => { t.preventDefault(); let e = t.target; g(e).hasClass(b) || (e = g(e).closest(O)), P._jQueryInterface.call(g(e), 'toggle'); }).on(k.FOCUS_BLUR_DATA_API, D, (t) => { const e = g(t.target).closest(O)[0]; g(e).toggleClass(I, /^focus(in)?$/.test(t.type)); }), g.fn[v] = P._jQueryInterface, g.fn[v].Constructor = P, g.fn[v].noConflict = function () { return g.fn[v] = T, P._jQueryInterface; }; let L = 'carousel',
        j = 'bs.carousel',
        H = `.${j}`,
        R = '.data-api',
        U = g.fn[L],
        W = {
            interval: 5e3, keyboard: !0, slide: !1, pause: 'hover', wrap: !0, touch: !0,
        },
        x = {
            interval: '(number|boolean)', keyboard: 'boolean', slide: '(boolean|string)', pause: '(string|boolean)', wrap: 'boolean', touch: 'boolean',
        },
        F = 'next',
        q = 'prev',
        M = 'left',
        K = 'right',
        Q = {
            SLIDE: `slide${H}`, SLID: `slid${H}`, KEYDOWN: `keydown${H}`, MOUSEENTER: `mouseenter${H}`, MOUSELEAVE: `mouseleave${H}`, TOUCHSTART: `touchstart${H}`, TOUCHMOVE: `touchmove${H}`, TOUCHEND: `touchend${H}`, POINTERDOWN: `pointerdown${H}`, POINTERUP: `pointerup${H}`, DRAG_START: `dragstart${H}`, LOAD_DATA_API: `load${H}${R}`, CLICK_DATA_API: `click${H}${R}`,
        },
        B = 'carousel',
        V = 'active',
        Y = 'slide',
        X = 'carousel-item-right',
        z = 'carousel-item-left',
        G = 'carousel-item-next',
        J = 'carousel-item-prev',
        Z = 'pointer-event',
        $ = '.active',
        tt = '.active.carousel-item',
        et = '.carousel-item',
        nt = '.carousel-item img',
        it = '.carousel-item-next, .carousel-item-prev',
        ot = '.carousel-indicators',
        rt = '[data-slide], [data-slide-to]',
        st = '[data-ride="carousel"]',
        at = { TOUCH: 'touch', PEN: 'pen' },
        lt = (function () {
            function r(t, e) { this._items = null, this._interval = null, this._activeElement = null, this._isPaused = !1, this._isSliding = !1, this.touchTimeout = null, this.touchStartX = 0, this.touchDeltaX = 0, this._config = this._getConfig(e), this._element = t, this._indicatorsElement = this._element.querySelector(ot), this._touchSupported = 'ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0, this._pointerEvent = Boolean(window.PointerEvent || window.MSPointerEvent), this._addEventListeners(); } const t = r.prototype; return t.next = function () { this._isSliding || this._slide(F); }, t.nextWhenVisible = function () { !document.hidden && g(this._element).is(':visible') && g(this._element).css('visibility') !== 'hidden' && this.next(); }, t.prev = function () { this._isSliding || this._slide(q); }, t.pause = function (t) { t || (this._isPaused = !0), this._element.querySelector(it) && (_.triggerTransitionEnd(this._element), this.cycle(!0)), clearInterval(this._interval), this._interval = null; }, t.cycle = function (t) { t || (this._isPaused = !1), this._interval && (clearInterval(this._interval), this._interval = null), this._config.interval && !this._isPaused && (this._interval = setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval)); }, t.to = function (t) { const e = this; this._activeElement = this._element.querySelector(tt); const n = this._getItemIndex(this._activeElement); if (!(t > this._items.length - 1 || t < 0)) if (this._isSliding)g(this._element).one(Q.SLID, () => e.to(t)); else { if (n === t) return this.pause(), void this.cycle(); const i = n < t ? F : q; this._slide(i, this._items[t]); } }, t.dispose = function () { g(this._element).off(H), g.removeData(this._element, j), this._items = null, this._config = null, this._element = null, this._interval = null, this._isPaused = null, this._isSliding = null, this._activeElement = null, this._indicatorsElement = null; }, t._getConfig = function (t) { return t = l({}, W, t), _.typeCheckConfig(L, t, x), t; }, t._handleSwipe = function () { const t = Math.abs(this.touchDeltaX); if (!(t <= 40)) { const e = t / this.touchDeltaX; e > 0 && this.prev(), e < 0 && this.next(); } }, t._addEventListeners = function () { const e = this; this._config.keyboard && g(this._element).on(Q.KEYDOWN, t => e._keydown(t)), this._config.pause === 'hover' && g(this._element).on(Q.MOUSEENTER, t => e.pause(t)).on(Q.MOUSELEAVE, t => e.cycle(t)), this._addTouchEventListeners(); }, t._addTouchEventListeners = function () {
                const n = this; if (this._touchSupported) {
                    let e = function (t) { n._pointerEvent && at[t.originalEvent.pointerType.toUpperCase()] ? n.touchStartX = t.originalEvent.clientX : n._pointerEvent || (n.touchStartX = t.originalEvent.touches[0].clientX); },
                        i = function (t) { n._pointerEvent && at[t.originalEvent.pointerType.toUpperCase()] && (n.touchDeltaX = t.originalEvent.clientX - n.touchStartX), n._handleSwipe(), n._config.pause === 'hover' && (n.pause(), n.touchTimeout && clearTimeout(n.touchTimeout), n.touchTimeout = setTimeout(t => n.cycle(t), 500 + n._config.interval)); }; g(this._element.querySelectorAll(nt)).on(Q.DRAG_START, t => t.preventDefault()), this._pointerEvent ? (g(this._element).on(Q.POINTERDOWN, t => e(t)), g(this._element).on(Q.POINTERUP, t => i(t)), this._element.classList.add(Z)) : (g(this._element).on(Q.TOUCHSTART, t => e(t)), g(this._element).on(Q.TOUCHMOVE, (t) => { let e; (e = t).originalEvent.touches && e.originalEvent.touches.length > 1 ? n.touchDeltaX = 0 : n.touchDeltaX = e.originalEvent.touches[0].clientX - n.touchStartX; }), g(this._element).on(Q.TOUCHEND, t => i(t)));
                }
            }, t._keydown = function (t) { if (!/input|textarea/i.test(t.target.tagName)) switch (t.which) { case 37: t.preventDefault(), this.prev(); break; case 39: t.preventDefault(), this.next(); } }, t._getItemIndex = function (t) { return this._items = t && t.parentNode ? [].slice.call(t.parentNode.querySelectorAll(et)) : [], this._items.indexOf(t); }, t._getItemByDirection = function (t, e) {
                let n = t === F,
                    i = t === q,
                    o = this._getItemIndex(e),
                    r = this._items.length - 1; if ((i && o === 0 || n && o === r) && !this._config.wrap) return e; const s = (o + (t === q ? -1 : 1)) % this._items.length; return s === -1 ? this._items[this._items.length - 1] : this._items[s];
            }, t._triggerSlideEvent = function (t, e) {
                let n = this._getItemIndex(t),
                    i = this._getItemIndex(this._element.querySelector(tt)),
                    o = g.Event(Q.SLIDE, {
                        relatedTarget: t, direction: e, from: i, to: n,
                    }); return g(this._element).trigger(o), o;
            }, t._setActiveIndicatorElement = function (t) { if (this._indicatorsElement) { const e = [].slice.call(this._indicatorsElement.querySelectorAll($)); g(e).removeClass(V); const n = this._indicatorsElement.children[this._getItemIndex(t)]; n && g(n).addClass(V); } }, t._slide = function (t, e) {
                let n,
                    i,
                    o,
                    r = this,
                    s = this._element.querySelector(tt),
                    a = this._getItemIndex(s),
                    l = e || s && this._getItemByDirection(t, s),
                    c = this._getItemIndex(l),
                    h = Boolean(this._interval); if (o = t === F ? (n = z, i = G, M) : (n = X, i = J, K), l && g(l).hasClass(V)) this._isSliding = !1; else if (!this._triggerSlideEvent(l, o).isDefaultPrevented() && s && l) {
                    this._isSliding = !0, h && this.pause(), this._setActiveIndicatorElement(l); const u = g.Event(Q.SLID, {
                        relatedTarget: l, direction: o, from: a, to: c,
                    }); if (g(this._element).hasClass(Y)) { g(l).addClass(i), _.reflow(l), g(s).addClass(n), g(l).addClass(n); const f = parseInt(l.getAttribute('data-interval'), 10); this._config.interval = f ? (this._config.defaultInterval = this._config.defaultInterval || this._config.interval, f) : this._config.defaultInterval || this._config.interval; const d = _.getTransitionDurationFromElement(s); g(s).one(_.TRANSITION_END, () => { g(l).removeClass(`${n} ${i}`).addClass(V), g(s).removeClass(`${V} ${i} ${n}`), r._isSliding = !1, setTimeout(() => g(r._element).trigger(u), 0); }).emulateTransitionEnd(d); } else g(s).removeClass(V), g(l).addClass(V), this._isSliding = !1, g(this._element).trigger(u); h && this.cycle();
                }
            }, r._jQueryInterface = function (i) {
                return this.each(function () {
                    let t = g(this).data(j),
                        e = l({}, W, g(this).data()); typeof i === 'object' && (e = l({}, e, i)); const n = typeof i === 'string' ? i : e.slide; if (t || (t = new r(this, e), g(this).data(j, t)), typeof i === 'number')t.to(i); else if (typeof n === 'string') { if (typeof t[n] === 'undefined') throw new TypeError(`No method named "${n}"`); t[n](); } else e.interval && (t.pause(), t.cycle());
                });
            }, r._dataApiClickHandler = function (t) {
                const e = _.getSelectorFromElement(this); if (e) {
                    const n = g(e)[0]; if (n && g(n).hasClass(B)) {
                        let i = l({}, g(n).data(), g(this).data()),
                            o = this.getAttribute('data-slide-to'); o && (i.interval = !1), r._jQueryInterface.call(g(n), i), o && g(n).data(j).to(o), t.preventDefault();
                    }
                }
            }, s(r, null, [{ key: 'VERSION', get() { return '4.2.1'; } }, { key: 'Default', get() { return W; } }]), r;
        }()); g(document).on(Q.CLICK_DATA_API, rt, lt._dataApiClickHandler), g(window).on(Q.LOAD_DATA_API, () => { for (let t = [].slice.call(document.querySelectorAll(st)), e = 0, n = t.length; e < n; e++) { const i = g(t[e]); lt._jQueryInterface.call(i, i.data()); } }), g.fn[L] = lt._jQueryInterface, g.fn[L].Constructor = lt, g.fn[L].noConflict = function () { return g.fn[L] = U, lt._jQueryInterface; }; let ct = 'collapse',
        ht = 'bs.collapse',
        ut = `.${ht}`,
        ft = g.fn[ct],
        dt = { toggle: !0, parent: '' },
        gt = { toggle: 'boolean', parent: '(string|element)' },
        _t = {
            SHOW: `show${ut}`, SHOWN: `shown${ut}`, HIDE: `hide${ut}`, HIDDEN: `hidden${ut}`, CLICK_DATA_API: `click${ut}.data-api`,
        },
        mt = 'show',
        pt = 'collapse',
        vt = 'collapsing',
        Et = 'collapsed',
        yt = 'width',
        Ct = 'height',
        Tt = '.show, .collapsing',
        St = '[data-toggle="collapse"]',
        bt = (function () {
            function a(e, t) {
                this._isTransitioning = !1, this._element = e, this._config = this._getConfig(t), this._triggerArray = [].slice.call(document.querySelectorAll(`[data-toggle="collapse"][href="#${e.id}"],[data-toggle="collapse"][data-target="#${e.id}"]`)); for (let n = [].slice.call(document.querySelectorAll(St)), i = 0, o = n.length; i < o; i++) {
                    let r = n[i],
                        s = _.getSelectorFromElement(r),
                        a = [].slice.call(document.querySelectorAll(s)).filter(t => t === e); s !== null && a.length > 0 && (this._selector = s, this._triggerArray.push(r));
                } this._parent = this._config.parent ? this._getParent() : null, this._config.parent || this._addAriaAndCollapsedClass(this._element, this._triggerArray), this._config.toggle && this.toggle();
            } const t = a.prototype; return t.toggle = function () { g(this._element).hasClass(mt) ? this.hide() : this.show(); }, t.show = function () {
                let t,
                    e,
                    n = this; if (!this._isTransitioning && !g(this._element).hasClass(mt) && (this._parent && (t = [].slice.call(this._parent.querySelectorAll(Tt)).filter(t => (typeof n._config.parent === 'string' ? t.getAttribute('data-parent') === n._config.parent : t.classList.contains(pt)))).length === 0 && (t = null), !(t && (e = g(t).not(this._selector).data(ht)) && e._isTransitioning))) {
                    const i = g.Event(_t.SHOW); if (g(this._element).trigger(i), !i.isDefaultPrevented()) {
                        t && (a._jQueryInterface.call(g(t).not(this._selector), 'hide'), e || g(t).data(ht, null)); const o = this._getDimension(); g(this._element).removeClass(pt).addClass(vt), this._element.style[o] = 0, this._triggerArray.length && g(this._triggerArray).removeClass(Et).attr('aria-expanded', !0), this.setTransitioning(!0); let r = `scroll${o[0].toUpperCase() + o.slice(1)}`,
                            s = _.getTransitionDurationFromElement(this._element); g(this._element).one(_.TRANSITION_END, () => { g(n._element).removeClass(vt).addClass(pt).addClass(mt), n._element.style[o] = '', n.setTransitioning(!1), g(n._element).trigger(_t.SHOWN); }).emulateTransitionEnd(s), this._element.style[o] = `${this._element[r]}px`;
                    }
                }
            }, t.hide = function () {
                const t = this; if (!this._isTransitioning && g(this._element).hasClass(mt)) {
                    const e = g.Event(_t.HIDE); if (g(this._element).trigger(e), !e.isDefaultPrevented()) {
                        const n = this._getDimension(); this._element.style[n] = `${this._element.getBoundingClientRect()[n]}px`, _.reflow(this._element), g(this._element).addClass(vt).removeClass(pt).removeClass(mt); const i = this._triggerArray.length; if (i > 0) {
                            for (let o = 0; o < i; o++) {
                                let r = this._triggerArray[o],
                                    s = _.getSelectorFromElement(r); if (s !== null)g([].slice.call(document.querySelectorAll(s))).hasClass(mt) || g(r).addClass(Et).attr('aria-expanded', !1);
                            }
                        } this.setTransitioning(!0); this._element.style[n] = ''; const a = _.getTransitionDurationFromElement(this._element); g(this._element).one(_.TRANSITION_END, () => { t.setTransitioning(!1), g(t._element).removeClass(vt).addClass(pt).trigger(_t.HIDDEN); }).emulateTransitionEnd(a);
                    }
                }
            }, t.setTransitioning = function (t) { this._isTransitioning = t; }, t.dispose = function () { g.removeData(this._element, ht), this._config = null, this._parent = null, this._element = null, this._triggerArray = null, this._isTransitioning = null; }, t._getConfig = function (t) { return (t = l({}, dt, t)).toggle = Boolean(t.toggle), _.typeCheckConfig(ct, t, gt), t; }, t._getDimension = function () { return g(this._element).hasClass(yt) ? yt : Ct; }, t._getParent = function () {
                let t,
                    n = this; _.isElement(this._config.parent) ? (t = this._config.parent, typeof this._config.parent.jquery !== 'undefined' && (t = this._config.parent[0])) : t = document.querySelector(this._config.parent); let e = `[data-toggle="collapse"][data-parent="${this._config.parent}"]`,
                    i = [].slice.call(t.querySelectorAll(e)); return g(i).each((t, e) => { n._addAriaAndCollapsedClass(a._getTargetFromElement(e), [e]); }), t;
            }, t._addAriaAndCollapsedClass = function (t, e) { const n = g(t).hasClass(mt); e.length && g(e).toggleClass(Et, !n).attr('aria-expanded', n); }, a._getTargetFromElement = function (t) { const e = _.getSelectorFromElement(t); return e ? document.querySelector(e) : null; }, a._jQueryInterface = function (i) {
                return this.each(function () {
                    let t = g(this),
                        e = t.data(ht),
                        n = l({}, dt, t.data(), typeof i === 'object' && i ? i : {}); if (!e && n.toggle && /show|hide/.test(i) && (n.toggle = !1), e || (e = new a(this, n), t.data(ht, e)), typeof i === 'string') { if (typeof e[i] === 'undefined') throw new TypeError(`No method named "${i}"`); e[i](); }
                });
            }, s(a, null, [{ key: 'VERSION', get() { return '4.2.1'; } }, { key: 'Default', get() { return dt; } }]), a;
        }()); g(document).on(_t.CLICK_DATA_API, St, function (t) {
        t.currentTarget.tagName === 'A' && t.preventDefault(); let n = g(this),
            e = _.getSelectorFromElement(this),
            i = [].slice.call(document.querySelectorAll(e)); g(i).each(function () {
            let t = g(this),
                e = t.data(ht) ? 'toggle' : n.data(); bt._jQueryInterface.call(t, e);
        });
    }), g.fn[ct] = bt._jQueryInterface, g.fn[ct].Constructor = bt, g.fn[ct].noConflict = function () { return g.fn[ct] = ft, bt._jQueryInterface; }; let It = 'dropdown',
        Dt = 'bs.dropdown',
        wt = `.${Dt}`,
        At = '.data-api',
        Nt = g.fn[It],
        Ot = new RegExp('38|40|27'),
        kt = {
            HIDE: `hide${wt}`, HIDDEN: `hidden${wt}`, SHOW: `show${wt}`, SHOWN: `shown${wt}`, CLICK: `click${wt}`, CLICK_DATA_API: `click${wt}${At}`, KEYDOWN_DATA_API: `keydown${wt}${At}`, KEYUP_DATA_API: `keyup${wt}${At}`,
        },
        Pt = 'disabled',
        Lt = 'show',
        jt = 'dropup',
        Ht = 'dropright',
        Rt = 'dropleft',
        Ut = 'dropdown-menu-right',
        Wt = 'position-static',
        xt = '[data-toggle="dropdown"]',
        Ft = '.dropdown form',
        qt = '.dropdown-menu',
        Mt = '.navbar-nav',
        Kt = '.dropdown-menu .dropdown-item:not(.disabled):not(:disabled)',
        Qt = 'top-start',
        Bt = 'top-end',
        Vt = 'bottom-start',
        Yt = 'bottom-end',
        Xt = 'right-start',
        zt = 'left-start',
        Gt = {
            offset: 0, flip: !0, boundary: 'scrollParent', reference: 'toggle', display: 'dynamic',
        },
        Jt = {
            offset: '(number|string|function)', flip: 'boolean', boundary: '(string|element)', reference: '(string|element)', display: 'string',
        },
        Zt = (function () {
            function c(t, e) { this._element = t, this._popper = null, this._config = this._getConfig(e), this._menu = this._getMenuElement(), this._inNavbar = this._detectNavbar(), this._addEventListeners(); } const t = c.prototype; return t.toggle = function () {
                if (!this._element.disabled && !g(this._element).hasClass(Pt)) {
                    let t = c._getParentFromElement(this._element),
                        e = g(this._menu).hasClass(Lt); if (c._clearMenus(), !e) {
                        let n = { relatedTarget: this._element },
                            i = g.Event(kt.SHOW, n); if (g(t).trigger(i), !i.isDefaultPrevented()) { if (!this._inNavbar) { if (typeof u === 'undefined') throw new TypeError("Bootstrap's dropdowns require Popper.js (https://popper.js.org/)"); let o = this._element; this._config.reference === 'parent' ? o = t : _.isElement(this._config.reference) && (o = this._config.reference, typeof this._config.reference.jquery !== 'undefined' && (o = this._config.reference[0])), this._config.boundary !== 'scrollParent' && g(t).addClass(Wt), this._popper = new u(o, this._menu, this._getPopperConfig()); }'ontouchstart' in document.documentElement && g(t).closest(Mt).length === 0 && g(document.body).children().on('mouseover', null, g.noop), this._element.focus(), this._element.setAttribute('aria-expanded', !0), g(this._menu).toggleClass(Lt), g(t).toggleClass(Lt).trigger(g.Event(kt.SHOWN, n)); }
                    }
                }
            }, t.show = function () {
                if (!(this._element.disabled || g(this._element).hasClass(Pt) || g(this._menu).hasClass(Lt))) {
                    let t = { relatedTarget: this._element },
                        e = g.Event(kt.SHOW, t),
                        n = c._getParentFromElement(this._element); g(n).trigger(e), e.isDefaultPrevented() || (g(this._menu).toggleClass(Lt), g(n).toggleClass(Lt).trigger(g.Event(kt.SHOWN, t)));
                }
            }, t.hide = function () {
                if (!this._element.disabled && !g(this._element).hasClass(Pt) && g(this._menu).hasClass(Lt)) {
                    let t = { relatedTarget: this._element },
                        e = g.Event(kt.HIDE, t),
                        n = c._getParentFromElement(this._element); g(n).trigger(e), e.isDefaultPrevented() || (g(this._menu).toggleClass(Lt), g(n).toggleClass(Lt).trigger(g.Event(kt.HIDDEN, t)));
                }
            }, t.dispose = function () { g.removeData(this._element, Dt), g(this._element).off(wt), this._element = null, (this._menu = null) !== this._popper && (this._popper.destroy(), this._popper = null); }, t.update = function () { this._inNavbar = this._detectNavbar(), this._popper !== null && this._popper.scheduleUpdate(); }, t._addEventListeners = function () { const e = this; g(this._element).on(kt.CLICK, (t) => { t.preventDefault(), t.stopPropagation(), e.toggle(); }); }, t._getConfig = function (t) { return t = l({}, this.constructor.Default, g(this._element).data(), t), _.typeCheckConfig(It, t, this.constructor.DefaultType), t; }, t._getMenuElement = function () { if (!this._menu) { const t = c._getParentFromElement(this._element); t && (this._menu = t.querySelector(qt)); } return this._menu; }, t._getPlacement = function () {
                let t = g(this._element.parentNode),
                    e = Vt; return t.hasClass(jt) ? (e = Qt, g(this._menu).hasClass(Ut) && (e = Bt)) : t.hasClass(Ht) ? e = Xt : t.hasClass(Rt) ? e = zt : g(this._menu).hasClass(Ut) && (e = Yt), e;
            }, t._detectNavbar = function () { return g(this._element).closest('.navbar').length > 0; }, t._getPopperConfig = function () {
                let e = this,
                    t = {}; typeof this._config.offset === 'function' ? t.fn = function (t) { return t.offsets = l({}, t.offsets, e._config.offset(t.offsets) || {}), t; } : t.offset = this._config.offset; const n = { placement: this._getPlacement(), modifiers: { offset: t, flip: { enabled: this._config.flip }, preventOverflow: { boundariesElement: this._config.boundary } } }; return this._config.display === 'static' && (n.modifiers.applyStyle = { enabled: !1 }), n;
            }, c._jQueryInterface = function (e) { return this.each(function () { let t = g(this).data(Dt); if (t || (t = new c(this, typeof e === 'object' ? e : null), g(this).data(Dt, t)), typeof e === 'string') { if (typeof t[e] === 'undefined') throw new TypeError(`No method named "${e}"`); t[e](); } }); }, c._clearMenus = function (t) {
                if (!t || t.which !== 3 && (t.type !== 'keyup' || t.which === 9)) {
                    for (let e = [].slice.call(document.querySelectorAll(xt)), n = 0, i = e.length; n < i; n++) {
                        let o = c._getParentFromElement(e[n]),
                            r = g(e[n]).data(Dt),
                            s = { relatedTarget: e[n] }; if (t && t.type === 'click' && (s.clickEvent = t), r) { const a = r._menu; if (g(o).hasClass(Lt) && !(t && (t.type === 'click' && /input|textarea/i.test(t.target.tagName) || t.type === 'keyup' && t.which === 9) && g.contains(o, t.target))) { const l = g.Event(kt.HIDE, s); g(o).trigger(l), l.isDefaultPrevented() || ('ontouchstart' in document.documentElement && g(document.body).children().off('mouseover', null, g.noop), e[n].setAttribute('aria-expanded', 'false'), g(a).removeClass(Lt), g(o).removeClass(Lt).trigger(g.Event(kt.HIDDEN, s))); } }
                    }
                }
            }, c._getParentFromElement = function (t) {
                let e,
                    n = _.getSelectorFromElement(t); return n && (e = document.querySelector(n)), e || t.parentNode;
            }, c._dataApiKeydownHandler = function (t) {
                if ((/input|textarea/i.test(t.target.tagName) ? !(t.which === 32 || t.which !== 27 && (t.which !== 40 && t.which !== 38 || g(t.target).closest(qt).length)) : Ot.test(t.which)) && (t.preventDefault(), t.stopPropagation(), !this.disabled && !g(this).hasClass(Pt))) {
                    let e = c._getParentFromElement(this),
                        n = g(e).hasClass(Lt); if (n && (!n || t.which !== 27 && t.which !== 32)) { const i = [].slice.call(e.querySelectorAll(Kt)); if (i.length !== 0) { let o = i.indexOf(t.target); t.which === 38 && o > 0 && o--, t.which === 40 && o < i.length - 1 && o++, o < 0 && (o = 0), i[o].focus(); } } else { if (t.which === 27) { const r = e.querySelector(xt); g(r).trigger('focus'); }g(this).trigger('click'); }
                }
            }, s(c, null, [{ key: 'VERSION', get() { return '4.2.1'; } }, { key: 'Default', get() { return Gt; } }, { key: 'DefaultType', get() { return Jt; } }]), c;
        }()); g(document).on(kt.KEYDOWN_DATA_API, xt, Zt._dataApiKeydownHandler).on(kt.KEYDOWN_DATA_API, qt, Zt._dataApiKeydownHandler).on(`${kt.CLICK_DATA_API} ${kt.KEYUP_DATA_API}`, Zt._clearMenus).on(kt.CLICK_DATA_API, xt, function (t) { t.preventDefault(), t.stopPropagation(), Zt._jQueryInterface.call(g(this), 'toggle'); }).on(kt.CLICK_DATA_API, Ft, (t) => { t.stopPropagation(); }), g.fn[It] = Zt._jQueryInterface, g.fn[It].Constructor = Zt, g.fn[It].noConflict = function () { return g.fn[It] = Nt, Zt._jQueryInterface; }; let $t = 'modal',
        te = 'bs.modal',
        ee = `.${te}`,
        ne = g.fn[$t],
        ie = {
            backdrop: !0, keyboard: !0, focus: !0, show: !0,
        },
        oe = {
            backdrop: '(boolean|string)', keyboard: 'boolean', focus: 'boolean', show: 'boolean',
        },
        re = {
            HIDE: `hide${ee}`, HIDDEN: `hidden${ee}`, SHOW: `show${ee}`, SHOWN: `shown${ee}`, FOCUSIN: `focusin${ee}`, RESIZE: `resize${ee}`, CLICK_DISMISS: `click.dismiss${ee}`, KEYDOWN_DISMISS: `keydown.dismiss${ee}`, MOUSEUP_DISMISS: `mouseup.dismiss${ee}`, MOUSEDOWN_DISMISS: `mousedown.dismiss${ee}`, CLICK_DATA_API: `click${ee}.data-api`,
        },
        se = 'modal-scrollbar-measure',
        ae = 'modal-backdrop',
        le = 'modal-open',
        ce = 'fade',
        he = 'show',
        ue = '.modal-dialog',
        fe = '[data-toggle="modal"]',
        de = '[data-dismiss="modal"]',
        ge = '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',
        _e = '.sticky-top',
        me = (function () {
            function o(t, e) { this._config = this._getConfig(e), this._element = t, this._dialog = t.querySelector(ue), this._backdrop = null, this._isShown = !1, this._isBodyOverflowing = !1, this._ignoreBackdropClick = !1, this._isTransitioning = !1, this._scrollbarWidth = 0; } const t = o.prototype; return t.toggle = function (t) { return this._isShown ? this.hide() : this.show(t); }, t.show = function (t) { const e = this; if (!this._isShown && !this._isTransitioning) { g(this._element).hasClass(ce) && (this._isTransitioning = !0); const n = g.Event(re.SHOW, { relatedTarget: t }); g(this._element).trigger(n), this._isShown || n.isDefaultPrevented() || (this._isShown = !0, this._checkScrollbar(), this._setScrollbar(), this._adjustDialog(), this._setEscapeEvent(), this._setResizeEvent(), g(this._element).on(re.CLICK_DISMISS, de, t => e.hide(t)), g(this._dialog).on(re.MOUSEDOWN_DISMISS, () => { g(e._element).one(re.MOUSEUP_DISMISS, (t) => { g(t.target).is(e._element) && (e._ignoreBackdropClick = !0); }); }), this._showBackdrop(() => e._showElement(t))); } }, t.hide = function (t) { const e = this; if (t && t.preventDefault(), this._isShown && !this._isTransitioning) { const n = g.Event(re.HIDE); if (g(this._element).trigger(n), this._isShown && !n.isDefaultPrevented()) { this._isShown = !1; const i = g(this._element).hasClass(ce); if (i && (this._isTransitioning = !0), this._setEscapeEvent(), this._setResizeEvent(), g(document).off(re.FOCUSIN), g(this._element).removeClass(he), g(this._element).off(re.CLICK_DISMISS), g(this._dialog).off(re.MOUSEDOWN_DISMISS), i) { const o = _.getTransitionDurationFromElement(this._element); g(this._element).one(_.TRANSITION_END, t => e._hideModal(t)).emulateTransitionEnd(o); } else this._hideModal(); } } }, t.dispose = function () { [window, this._element, this._dialog].forEach(t => g(t).off(ee)), g(document).off(re.FOCUSIN), g.removeData(this._element, te), this._config = null, this._element = null, this._dialog = null, this._backdrop = null, this._isShown = null, this._isBodyOverflowing = null, this._ignoreBackdropClick = null, this._isTransitioning = null, this._scrollbarWidth = null; }, t.handleUpdate = function () { this._adjustDialog(); }, t._getConfig = function (t) { return t = l({}, ie, t), _.typeCheckConfig($t, t, oe), t; }, t._showElement = function (t) {
                let e = this,
                    n = g(this._element).hasClass(ce); this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE || document.body.appendChild(this._element), this._element.style.display = 'block', this._element.removeAttribute('aria-hidden'), this._element.setAttribute('aria-modal', !0), this._element.scrollTop = 0, n && _.reflow(this._element), g(this._element).addClass(he), this._config.focus && this._enforceFocus(); let i = g.Event(re.SHOWN, { relatedTarget: t }),
                    o = function () { e._config.focus && e._element.focus(), e._isTransitioning = !1, g(e._element).trigger(i); }; if (n) { const r = _.getTransitionDurationFromElement(this._dialog); g(this._dialog).one(_.TRANSITION_END, o).emulateTransitionEnd(r); } else o();
            }, t._enforceFocus = function () { const e = this; g(document).off(re.FOCUSIN).on(re.FOCUSIN, (t) => { document !== t.target && e._element !== t.target && g(e._element).has(t.target).length === 0 && e._element.focus(); }); }, t._setEscapeEvent = function () { const e = this; this._isShown && this._config.keyboard ? g(this._element).on(re.KEYDOWN_DISMISS, (t) => { t.which === 27 && (t.preventDefault(), e.hide()); }) : this._isShown || g(this._element).off(re.KEYDOWN_DISMISS); }, t._setResizeEvent = function () { const e = this; this._isShown ? g(window).on(re.RESIZE, t => e.handleUpdate(t)) : g(window).off(re.RESIZE); }, t._hideModal = function () { const t = this; this._element.style.display = 'none', this._element.setAttribute('aria-hidden', !0), this._element.removeAttribute('aria-modal'), this._isTransitioning = !1, this._showBackdrop(() => { g(document.body).removeClass(le), t._resetAdjustments(), t._resetScrollbar(), g(t._element).trigger(re.HIDDEN); }); }, t._removeBackdrop = function () { this._backdrop && (g(this._backdrop).remove(), this._backdrop = null); }, t._showBackdrop = function (t) {
                let e = this,
                    n = g(this._element).hasClass(ce) ? ce : ''; if (this._isShown && this._config.backdrop) { if (this._backdrop = document.createElement('div'), this._backdrop.className = ae, n && this._backdrop.classList.add(n), g(this._backdrop).appendTo(document.body), g(this._element).on(re.CLICK_DISMISS, (t) => { e._ignoreBackdropClick ? e._ignoreBackdropClick = !1 : t.target === t.currentTarget && (e._config.backdrop === 'static' ? e._element.focus() : e.hide()); }), n && _.reflow(this._backdrop), g(this._backdrop).addClass(he), !t) return; if (!n) return void t(); const i = _.getTransitionDurationFromElement(this._backdrop); g(this._backdrop).one(_.TRANSITION_END, t).emulateTransitionEnd(i); } else if (!this._isShown && this._backdrop) { g(this._backdrop).removeClass(he); const o = function () { e._removeBackdrop(), t && t(); }; if (g(this._element).hasClass(ce)) { const r = _.getTransitionDurationFromElement(this._backdrop); g(this._backdrop).one(_.TRANSITION_END, o).emulateTransitionEnd(r); } else o(); } else t && t();
            }, t._adjustDialog = function () { const t = this._element.scrollHeight > document.documentElement.clientHeight; !this._isBodyOverflowing && t && (this._element.style.paddingLeft = `${this._scrollbarWidth}px`), this._isBodyOverflowing && !t && (this._element.style.paddingRight = `${this._scrollbarWidth}px`); }, t._resetAdjustments = function () { this._element.style.paddingLeft = '', this._element.style.paddingRight = ''; }, t._checkScrollbar = function () { const t = document.body.getBoundingClientRect(); this._isBodyOverflowing = t.left + t.right < window.innerWidth, this._scrollbarWidth = this._getScrollbarWidth(); }, t._setScrollbar = function () {
                const o = this; if (this._isBodyOverflowing) {
                    let t = [].slice.call(document.querySelectorAll(ge)),
                        e = [].slice.call(document.querySelectorAll(_e)); g(t).each((t, e) => {
                        let n = e.style.paddingRight,
                            i = g(e).css('padding-right'); g(e).data('padding-right', n).css('padding-right', `${parseFloat(i) + o._scrollbarWidth}px`);
                    }), g(e).each((t, e) => {
                        let n = e.style.marginRight,
                            i = g(e).css('margin-right'); g(e).data('margin-right', n).css('margin-right', `${parseFloat(i) - o._scrollbarWidth}px`);
                    }); let n = document.body.style.paddingRight,
                        i = g(document.body).css('padding-right'); g(document.body).data('padding-right', n).css('padding-right', `${parseFloat(i) + this._scrollbarWidth}px`);
                }g(document.body).addClass(le);
            }, t._resetScrollbar = function () { const t = [].slice.call(document.querySelectorAll(ge)); g(t).each((t, e) => { const n = g(e).data('padding-right'); g(e).removeData('padding-right'), e.style.paddingRight = n || ''; }); const e = [].slice.call(document.querySelectorAll(`${_e}`)); g(e).each((t, e) => { const n = g(e).data('margin-right'); typeof n !== 'undefined' && g(e).css('margin-right', n).removeData('margin-right'); }); const n = g(document.body).data('padding-right'); g(document.body).removeData('padding-right'), document.body.style.paddingRight = n || ''; }, t._getScrollbarWidth = function () { const t = document.createElement('div'); t.className = se, document.body.appendChild(t); const e = t.getBoundingClientRect().width - t.clientWidth; return document.body.removeChild(t), e; }, o._jQueryInterface = function (n, i) {
                return this.each(function () {
                    let t = g(this).data(te),
                        e = l({}, ie, g(this).data(), typeof n === 'object' && n ? n : {}); if (t || (t = new o(this, e), g(this).data(te, t)), typeof n === 'string') { if (typeof t[n] === 'undefined') throw new TypeError(`No method named "${n}"`); t[n](i); } else e.show && t.show(i);
                });
            }, s(o, null, [{ key: 'VERSION', get() { return '4.2.1'; } }, { key: 'Default', get() { return ie; } }]), o;
        }()); g(document).on(re.CLICK_DATA_API, fe, function (t) {
        let e,
            n = this,
            i = _.getSelectorFromElement(this); i && (e = document.querySelector(i)); const o = g(e).data(te) ? 'toggle' : l({}, g(e).data(), g(this).data()); this.tagName !== 'A' && this.tagName !== 'AREA' || t.preventDefault(); var r = g(e).one(re.SHOW, (t) => { t.isDefaultPrevented() || r.one(re.HIDDEN, () => { g(n).is(':visible') && n.focus(); }); }); me._jQueryInterface.call(g(e), o, this);
    }), g.fn[$t] = me._jQueryInterface, g.fn[$t].Constructor = me, g.fn[$t].noConflict = function () { return g.fn[$t] = ne, me._jQueryInterface; }; let pe = 'tooltip',
        ve = 'bs.tooltip',
        Ee = `.${ve}`,
        ye = g.fn[pe],
        Ce = 'bs-tooltip',
        Te = new RegExp(`(^|\\s)${Ce}\\S+`, 'g'),
        Se = {
            animation: 'boolean', template: 'string', title: '(string|element|function)', trigger: 'string', delay: '(number|object)', html: 'boolean', selector: '(string|boolean)', placement: '(string|function)', offset: '(number|string)', container: '(string|element|boolean)', fallbackPlacement: '(string|array)', boundary: '(string|element)',
        },
        be = {
            AUTO: 'auto', TOP: 'top', RIGHT: 'right', BOTTOM: 'bottom', LEFT: 'left',
        },
        Ie = {
            animation: !0, template: '<div class="tooltip" role="tooltip"><div class="arrow"></div><div class="tooltip-inner"></div></div>', trigger: 'hover focus', title: '', delay: 0, html: !1, selector: !1, placement: 'top', offset: 0, container: !1, fallbackPlacement: 'flip', boundary: 'scrollParent',
        },
        De = 'show',
        we = 'out',
        Ae = {
            HIDE: `hide${Ee}`, HIDDEN: `hidden${Ee}`, SHOW: `show${Ee}`, SHOWN: `shown${Ee}`, INSERTED: `inserted${Ee}`, CLICK: `click${Ee}`, FOCUSIN: `focusin${Ee}`, FOCUSOUT: `focusout${Ee}`, MOUSEENTER: `mouseenter${Ee}`, MOUSELEAVE: `mouseleave${Ee}`,
        },
        Ne = 'fade',
        Oe = 'show',
        ke = '.tooltip-inner',
        Pe = '.arrow',
        Le = 'hover',
        je = 'focus',
        He = 'click',
        Re = 'manual',
        Ue = (function () {
            function i(t, e) { if (typeof u === 'undefined') throw new TypeError("Bootstrap's tooltips require Popper.js (https://popper.js.org/)"); this._isEnabled = !0, this._timeout = 0, this._hoverState = '', this._activeTrigger = {}, this._popper = null, this.element = t, this.config = this._getConfig(e), this.tip = null, this._setListeners(); } const t = i.prototype; return t.enable = function () { this._isEnabled = !0; }, t.disable = function () { this._isEnabled = !1; }, t.toggleEnabled = function () { this._isEnabled = !this._isEnabled; }, t.toggle = function (t) {
                if (this._isEnabled) {
                    if (t) {
                        let e = this.constructor.DATA_KEY,
                            n = g(t.currentTarget).data(e); n || (n = new this.constructor(t.currentTarget, this._getDelegateConfig()), g(t.currentTarget).data(e, n)), n._activeTrigger.click = !n._activeTrigger.click, n._isWithActiveTrigger() ? n._enter(null, n) : n._leave(null, n);
                    } else { if (g(this.getTipElement()).hasClass(Oe)) return void this._leave(null, this); this._enter(null, this); }
                }
            }, t.dispose = function () { clearTimeout(this._timeout), g.removeData(this.element, this.constructor.DATA_KEY), g(this.element).off(this.constructor.EVENT_KEY), g(this.element).closest('.modal').off('hide.bs.modal'), this.tip && g(this.tip).remove(), this._isEnabled = null, this._timeout = null, this._hoverState = null, (this._activeTrigger = null) !== this._popper && this._popper.destroy(), this._popper = null, this.element = null, this.config = null, this.tip = null; }, t.show = function () {
                const e = this; if (g(this.element).css('display') === 'none') throw new Error('Please use show on visible elements'); const t = g.Event(this.constructor.Event.SHOW); if (this.isWithContent() && this._isEnabled) {
                    g(this.element).trigger(t); let n = _.findShadowRoot(this.element),
                        i = g.contains(n !== null ? n : this.element.ownerDocument.documentElement, this.element); if (t.isDefaultPrevented() || !i) return; let o = this.getTipElement(),
                        r = _.getUID(this.constructor.NAME); o.setAttribute('id', r), this.element.setAttribute('aria-describedby', r), this.setContent(), this.config.animation && g(o).addClass(Ne); let s = typeof this.config.placement === 'function' ? this.config.placement.call(this, o, this.element) : this.config.placement,
                        a = this._getAttachment(s); this.addAttachmentClass(a); const l = this._getContainer(); g(o).data(this.constructor.DATA_KEY, this), g.contains(this.element.ownerDocument.documentElement, this.tip) || g(o).appendTo(l), g(this.element).trigger(this.constructor.Event.INSERTED), this._popper = new u(this.element, o, {
                        placement: a,
                        modifiers: {
                            offset: { offset: this.config.offset }, flip: { behavior: this.config.fallbackPlacement }, arrow: { element: Pe }, preventOverflow: { boundariesElement: this.config.boundary },
                        },
                        onCreate(t) { t.originalPlacement !== t.placement && e._handlePopperPlacementChange(t); },
                        onUpdate(t) { return e._handlePopperPlacementChange(t); },
                    }), g(o).addClass(Oe), 'ontouchstart' in document.documentElement && g(document.body).children().on('mouseover', null, g.noop); const c = function () { e.config.animation && e._fixTransition(); const t = e._hoverState; e._hoverState = null, g(e.element).trigger(e.constructor.Event.SHOWN), t === we && e._leave(null, e); }; if (g(this.tip).hasClass(Ne)) { const h = _.getTransitionDurationFromElement(this.tip); g(this.tip).one(_.TRANSITION_END, c).emulateTransitionEnd(h); } else c();
                }
            }, t.hide = function (t) {
                let e = this,
                    n = this.getTipElement(),
                    i = g.Event(this.constructor.Event.HIDE),
                    o = function () { e._hoverState !== De && n.parentNode && n.parentNode.removeChild(n), e._cleanTipClass(), e.element.removeAttribute('aria-describedby'), g(e.element).trigger(e.constructor.Event.HIDDEN), e._popper !== null && e._popper.destroy(), t && t(); }; if (g(this.element).trigger(i), !i.isDefaultPrevented()) { if (g(n).removeClass(Oe), 'ontouchstart' in document.documentElement && g(document.body).children().off('mouseover', null, g.noop), this._activeTrigger[He] = !1, this._activeTrigger[je] = !1, this._activeTrigger[Le] = !1, g(this.tip).hasClass(Ne)) { const r = _.getTransitionDurationFromElement(n); g(n).one(_.TRANSITION_END, o).emulateTransitionEnd(r); } else o(); this._hoverState = ''; }
            }, t.update = function () { this._popper !== null && this._popper.scheduleUpdate(); }, t.isWithContent = function () { return Boolean(this.getTitle()); }, t.addAttachmentClass = function (t) { g(this.getTipElement()).addClass(`${Ce}-${t}`); }, t.getTipElement = function () { return this.tip = this.tip || g(this.config.template)[0], this.tip; }, t.setContent = function () { const t = this.getTipElement(); this.setElementContent(g(t.querySelectorAll(ke)), this.getTitle()), g(t).removeClass(`${Ne} ${Oe}`); }, t.setElementContent = function (t, e) { const n = this.config.html; typeof e === 'object' && (e.nodeType || e.jquery) ? n ? g(e).parent().is(t) || t.empty().append(e) : t.text(g(e).text()) : t[n ? 'html' : 'text'](e); }, t.getTitle = function () { let t = this.element.getAttribute('data-original-title'); return t || (t = typeof this.config.title === 'function' ? this.config.title.call(this.element) : this.config.title), t; }, t._getContainer = function () { return !1 === this.config.container ? document.body : _.isElement(this.config.container) ? g(this.config.container) : g(document).find(this.config.container); }, t._getAttachment = function (t) { return be[t.toUpperCase()]; }, t._setListeners = function () {
                const i = this; this.config.trigger.split(' ').forEach((t) => {
                    if (t === 'click')g(i.element).on(i.constructor.Event.CLICK, i.config.selector, t => i.toggle(t)); else if (t !== Re) {
                        let e = t === Le ? i.constructor.Event.MOUSEENTER : i.constructor.Event.FOCUSIN,
                            n = t === Le ? i.constructor.Event.MOUSELEAVE : i.constructor.Event.FOCUSOUT; g(i.element).on(e, i.config.selector, t => i._enter(t)).on(n, i.config.selector, t => i._leave(t));
                    }
                }), g(this.element).closest('.modal').on('hide.bs.modal', () => { i.element && i.hide(); }), this.config.selector ? this.config = l({}, this.config, { trigger: 'manual', selector: '' }) : this._fixTitle();
            }, t._fixTitle = function () { const t = typeof this.element.getAttribute('data-original-title'); (this.element.getAttribute('title') || t !== 'string') && (this.element.setAttribute('data-original-title', this.element.getAttribute('title') || ''), this.element.setAttribute('title', '')); }, t._enter = function (t, e) { const n = this.constructor.DATA_KEY; (e = e || g(t.currentTarget).data(n)) || (e = new this.constructor(t.currentTarget, this._getDelegateConfig()), g(t.currentTarget).data(n, e)), t && (e._activeTrigger[t.type === 'focusin' ? je : Le] = !0), g(e.getTipElement()).hasClass(Oe) || e._hoverState === De ? e._hoverState = De : (clearTimeout(e._timeout), e._hoverState = De, e.config.delay && e.config.delay.show ? e._timeout = setTimeout(() => { e._hoverState === De && e.show(); }, e.config.delay.show) : e.show()); }, t._leave = function (t, e) { const n = this.constructor.DATA_KEY; (e = e || g(t.currentTarget).data(n)) || (e = new this.constructor(t.currentTarget, this._getDelegateConfig()), g(t.currentTarget).data(n, e)), t && (e._activeTrigger[t.type === 'focusout' ? je : Le] = !1), e._isWithActiveTrigger() || (clearTimeout(e._timeout), e._hoverState = we, e.config.delay && e.config.delay.hide ? e._timeout = setTimeout(() => { e._hoverState === we && e.hide(); }, e.config.delay.hide) : e.hide()); }, t._isWithActiveTrigger = function () { for (const t in this._activeTrigger) if (this._activeTrigger[t]) return !0; return !1; }, t._getConfig = function (t) { return typeof (t = l({}, this.constructor.Default, g(this.element).data(), typeof t === 'object' && t ? t : {})).delay === 'number' && (t.delay = { show: t.delay, hide: t.delay }), typeof t.title === 'number' && (t.title = t.title.toString()), typeof t.content === 'number' && (t.content = t.content.toString()), _.typeCheckConfig(pe, t, this.constructor.DefaultType), t; }, t._getDelegateConfig = function () { const t = {}; if (this.config) for (const e in this.config) this.constructor.Default[e] !== this.config[e] && (t[e] = this.config[e]); return t; }, t._cleanTipClass = function () {
                let t = g(this.getTipElement()),
                    e = t.attr('class').match(Te); e !== null && e.length && t.removeClass(e.join(''));
            }, t._handlePopperPlacementChange = function (t) { const e = t.instance; this.tip = e.popper, this._cleanTipClass(), this.addAttachmentClass(this._getAttachment(t.placement)); }, t._fixTransition = function () {
                let t = this.getTipElement(),
                    e = this.config.animation; t.getAttribute('x-placement') === null && (g(t).removeClass(Ne), this.config.animation = !1, this.hide(), this.show(), this.config.animation = e);
            }, i._jQueryInterface = function (n) {
                return this.each(function () {
                    let t = g(this).data(ve),
                        e = typeof n === 'object' && n; if ((t || !/dispose|hide/.test(n)) && (t || (t = new i(this, e), g(this).data(ve, t)), typeof n === 'string')) { if (typeof t[n] === 'undefined') throw new TypeError(`No method named "${n}"`); t[n](); }
                });
            }, s(i, null, [{ key: 'VERSION', get() { return '4.2.1'; } }, { key: 'Default', get() { return Ie; } }, { key: 'NAME', get() { return pe; } }, { key: 'DATA_KEY', get() { return ve; } }, { key: 'Event', get() { return Ae; } }, { key: 'EVENT_KEY', get() { return Ee; } }, { key: 'DefaultType', get() { return Se; } }]), i;
        }()); g.fn[pe] = Ue._jQueryInterface, g.fn[pe].Constructor = Ue, g.fn[pe].noConflict = function () { return g.fn[pe] = ye, Ue._jQueryInterface; }; let We = 'popover',
        xe = 'bs.popover',
        Fe = `.${xe}`,
        qe = g.fn[We],
        Me = 'bs-popover',
        Ke = new RegExp(`(^|\\s)${Me}\\S+`, 'g'),
        Qe = l({}, Ue.Default, {
            placement: 'right', trigger: 'click', content: '', template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>',
        }),
        Be = l({}, Ue.DefaultType, { content: '(string|element|function)' }),
        Ve = 'fade',
        Ye = 'show',
        Xe = '.popover-header',
        ze = '.popover-body',
        Ge = {
            HIDE: `hide${Fe}`, HIDDEN: `hidden${Fe}`, SHOW: `show${Fe}`, SHOWN: `shown${Fe}`, INSERTED: `inserted${Fe}`, CLICK: `click${Fe}`, FOCUSIN: `focusin${Fe}`, FOCUSOUT: `focusout${Fe}`, MOUSEENTER: `mouseenter${Fe}`, MOUSELEAVE: `mouseleave${Fe}`,
        },
        Je = (function (t) {
            let e,
                n; function i() { return t.apply(this, arguments) || this; }n = t, (e = i).prototype = Object.create(n.prototype), (e.prototype.constructor = e).__proto__ = n; const o = i.prototype; return o.isWithContent = function () { return this.getTitle() || this._getContent(); }, o.addAttachmentClass = function (t) { g(this.getTipElement()).addClass(`${Me}-${t}`); }, o.getTipElement = function () { return this.tip = this.tip || g(this.config.template)[0], this.tip; }, o.setContent = function () { const t = g(this.getTipElement()); this.setElementContent(t.find(Xe), this.getTitle()); let e = this._getContent(); typeof e === 'function' && (e = e.call(this.element)), this.setElementContent(t.find(ze), e), t.removeClass(`${Ve} ${Ye}`); }, o._getContent = function () { return this.element.getAttribute('data-content') || this.config.content; }, o._cleanTipClass = function () {
                let t = g(this.getTipElement()),
                    e = t.attr('class').match(Ke); e !== null && e.length > 0 && t.removeClass(e.join(''));
            }, i._jQueryInterface = function (n) {
                return this.each(function () {
                    let t = g(this).data(xe),
                        e = typeof n === 'object' ? n : null; if ((t || !/dispose|hide/.test(n)) && (t || (t = new i(this, e), g(this).data(xe, t)), typeof n === 'string')) { if (typeof t[n] === 'undefined') throw new TypeError(`No method named "${n}"`); t[n](); }
                });
            }, s(i, null, [{ key: 'VERSION', get() { return '4.2.1'; } }, { key: 'Default', get() { return Qe; } }, { key: 'NAME', get() { return We; } }, { key: 'DATA_KEY', get() { return xe; } }, { key: 'Event', get() { return Ge; } }, { key: 'EVENT_KEY', get() { return Fe; } }, { key: 'DefaultType', get() { return Be; } }]), i;
        }(Ue)); g.fn[We] = Je._jQueryInterface, g.fn[We].Constructor = Je, g.fn[We].noConflict = function () { return g.fn[We] = qe, Je._jQueryInterface; }; let Ze = 'scrollspy',
        $e = 'bs.scrollspy',
        tn = `.${$e}`,
        en = g.fn[Ze],
        nn = { offset: 10, method: 'auto', target: '' },
        on = { offset: 'number', method: 'string', target: '(string|element)' },
        rn = { ACTIVATE: `activate${tn}`, SCROLL: `scroll${tn}`, LOAD_DATA_API: `load${tn}.data-api` },
        sn = 'dropdown-item',
        an = 'active',
        ln = '[data-spy="scroll"]',
        cn = '.nav, .list-group',
        hn = '.nav-link',
        un = '.nav-item',
        fn = '.list-group-item',
        dn = '.dropdown',
        gn = '.dropdown-item',
        _n = '.dropdown-toggle',
        mn = 'offset',
        pn = 'position',
        vn = (function () {
            function n(t, e) { const n = this; this._element = t, this._scrollElement = t.tagName === 'BODY' ? window : t, this._config = this._getConfig(e), this._selector = `${this._config.target} ${hn},${this._config.target} ${fn},${this._config.target} ${gn}`, this._offsets = [], this._targets = [], this._activeTarget = null, this._scrollHeight = 0, g(this._scrollElement).on(rn.SCROLL, t => n._process(t)), this.refresh(), this._process(); } const t = n.prototype; return t.refresh = function () {
                let e = this,
                    t = this._scrollElement === this._scrollElement.window ? mn : pn,
                    o = this._config.method === 'auto' ? t : this._config.method,
                    r = o === pn ? this._getScrollTop() : 0; this._offsets = [], this._targets = [], this._scrollHeight = this._getScrollHeight(), [].slice.call(document.querySelectorAll(this._selector)).map((t) => {
                    let e,
                        n = _.getSelectorFromElement(t); if (n && (e = document.querySelector(n)), e) { const i = e.getBoundingClientRect(); if (i.width || i.height) return [g(e)[o]().top + r, n]; } return null;
                }).filter(t => t).sort((t, e) => t[0] - e[0]).forEach((t) => { e._offsets.push(t[0]), e._targets.push(t[1]); });
            }, t.dispose = function () { g.removeData(this._element, $e), g(this._scrollElement).off(tn), this._element = null, this._scrollElement = null, this._config = null, this._selector = null, this._offsets = null, this._targets = null, this._activeTarget = null, this._scrollHeight = null; }, t._getConfig = function (t) { if (typeof (t = l({}, nn, typeof t === 'object' && t ? t : {})).target !== 'string') { let e = g(t.target).attr('id'); e || (e = _.getUID(Ze), g(t.target).attr('id', e)), t.target = `#${e}`; } return _.typeCheckConfig(Ze, t, on), t; }, t._getScrollTop = function () { return this._scrollElement === window ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop; }, t._getScrollHeight = function () { return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight); }, t._getOffsetHeight = function () { return this._scrollElement === window ? window.innerHeight : this._scrollElement.getBoundingClientRect().height; }, t._process = function () {
                let t = this._getScrollTop() + this._config.offset,
                    e = this._getScrollHeight(),
                    n = this._config.offset + e - this._getOffsetHeight(); if (this._scrollHeight !== e && this.refresh(), n <= t) { const i = this._targets[this._targets.length - 1]; this._activeTarget !== i && this._activate(i); } else { if (this._activeTarget && t < this._offsets[0] && this._offsets[0] > 0) return this._activeTarget = null, void this._clear(); for (let o = this._offsets.length; o--;) { this._activeTarget !== this._targets[o] && t >= this._offsets[o] && (typeof this._offsets[o + 1] === 'undefined' || t < this._offsets[o + 1]) && this._activate(this._targets[o]); } }
            }, t._activate = function (e) {
                this._activeTarget = e, this._clear(); let t = this._selector.split(',').map(t => `${t}[data-target="${e}"],${t}[href="${e}"]`),
                    n = g([].slice.call(document.querySelectorAll(t.join(',')))); n.hasClass(sn) ? (n.closest(dn).find(_n).addClass(an), n.addClass(an)) : (n.addClass(an), n.parents(cn).prev(`${hn}, ${fn}`).addClass(an), n.parents(cn).prev(un).children(hn).addClass(an)), g(this._scrollElement).trigger(rn.ACTIVATE, { relatedTarget: e });
            }, t._clear = function () { [].slice.call(document.querySelectorAll(this._selector)).filter(t => t.classList.contains(an)).forEach(t => t.classList.remove(an)); }, n._jQueryInterface = function (e) { return this.each(function () { let t = g(this).data($e); if (t || (t = new n(this, typeof e === 'object' && e), g(this).data($e, t)), typeof e === 'string') { if (typeof t[e] === 'undefined') throw new TypeError(`No method named "${e}"`); t[e](); } }); }, s(n, null, [{ key: 'VERSION', get() { return '4.2.1'; } }, { key: 'Default', get() { return nn; } }]), n;
        }()); g(window).on(rn.LOAD_DATA_API, () => { for (let t = [].slice.call(document.querySelectorAll(ln)), e = t.length; e--;) { const n = g(t[e]); vn._jQueryInterface.call(n, n.data()); } }), g.fn[Ze] = vn._jQueryInterface, g.fn[Ze].Constructor = vn, g.fn[Ze].noConflict = function () { return g.fn[Ze] = en, vn._jQueryInterface; }; let En = 'bs.tab',
        yn = `.${En}`,
        Cn = g.fn.tab,
        Tn = {
            HIDE: `hide${yn}`, HIDDEN: `hidden${yn}`, SHOW: `show${yn}`, SHOWN: `shown${yn}`, CLICK_DATA_API: `click${yn}.data-api`,
        },
        Sn = 'dropdown-menu',
        bn = 'active',
        In = 'disabled',
        Dn = 'fade',
        wn = 'show',
        An = '.dropdown',
        Nn = '.nav, .list-group',
        On = '.active',
        kn = '> li > .active',
        Pn = '[data-toggle="tab"], [data-toggle="pill"], [data-toggle="list"]',
        Ln = '.dropdown-toggle',
        jn = '> .dropdown-menu .active',
        Hn = (function () {
            function i(t) { this._element = t; } const t = i.prototype; return t.show = function () {
                const n = this; if (!(this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE && g(this._element).hasClass(bn) || g(this._element).hasClass(In))) {
                    let t,
                        i,
                        e = g(this._element).closest(Nn)[0],
                        o = _.getSelectorFromElement(this._element); if (e) { const r = e.nodeName === 'UL' || e.nodeName === 'OL' ? kn : On; i = (i = g.makeArray(g(e).find(r)))[i.length - 1]; } let s = g.Event(Tn.HIDE, { relatedTarget: this._element }),
                        a = g.Event(Tn.SHOW, { relatedTarget: i }); if (i && g(i).trigger(s), g(this._element).trigger(a), !a.isDefaultPrevented() && !s.isDefaultPrevented()) {
                        o && (t = document.querySelector(o)), this._activate(this._element, e); const l = function () {
                            let t = g.Event(Tn.HIDDEN, { relatedTarget: n._element }),
                                e = g.Event(Tn.SHOWN, { relatedTarget: i }); g(i).trigger(t), g(n._element).trigger(e);
                        }; t ? this._activate(t, t.parentNode, l) : l();
                    }
                }
            }, t.dispose = function () { g.removeData(this._element, En), this._element = null; }, t._activate = function (t, e, n) {
                let i = this,
                    o = (!e || e.nodeName !== 'UL' && e.nodeName !== 'OL' ? g(e).children(On) : g(e).find(kn))[0],
                    r = n && o && g(o).hasClass(Dn),
                    s = function () { return i._transitionComplete(t, o, n); }; if (o && r) { const a = _.getTransitionDurationFromElement(o); g(o).removeClass(wn).one(_.TRANSITION_END, s).emulateTransitionEnd(a); } else s();
            }, t._transitionComplete = function (t, e, n) { if (e) { g(e).removeClass(bn); const i = g(e.parentNode).find(jn)[0]; i && g(i).removeClass(bn), e.getAttribute('role') === 'tab' && e.setAttribute('aria-selected', !1); } if (g(t).addClass(bn), t.getAttribute('role') === 'tab' && t.setAttribute('aria-selected', !0), _.reflow(t), g(t).addClass(wn), t.parentNode && g(t.parentNode).hasClass(Sn)) { const o = g(t).closest(An)[0]; if (o) { const r = [].slice.call(o.querySelectorAll(Ln)); g(r).addClass(bn); }t.setAttribute('aria-expanded', !0); }n && n(); }, i._jQueryInterface = function (n) {
                return this.each(function () {
                    let t = g(this),
                        e = t.data(En); if (e || (e = new i(this), t.data(En, e)), typeof n === 'string') { if (typeof e[n] === 'undefined') throw new TypeError(`No method named "${n}"`); e[n](); }
                });
            }, s(i, null, [{ key: 'VERSION', get() { return '4.2.1'; } }]), i;
        }()); g(document).on(Tn.CLICK_DATA_API, Pn, function (t) { t.preventDefault(), Hn._jQueryInterface.call(g(this), 'show'); }), g.fn.tab = Hn._jQueryInterface, g.fn.tab.Constructor = Hn, g.fn.tab.noConflict = function () { return g.fn.tab = Cn, Hn._jQueryInterface; }; let Rn = 'toast',
        Un = 'bs.toast',
        Wn = `.${Un}`,
        xn = g.fn[Rn],
        Fn = {
            CLICK_DISMISS: `click.dismiss${Wn}`, HIDE: `hide${Wn}`, HIDDEN: `hidden${Wn}`, SHOW: `show${Wn}`, SHOWN: `shown${Wn}`,
        },
        qn = 'fade',
        Mn = 'hide',
        Kn = 'show',
        Qn = 'showing',
        Bn = { animation: 'boolean', autohide: 'boolean', delay: 'number' },
        Vn = { animation: !0, autohide: !0, delay: 500 },
        Yn = '[data-dismiss="toast"]',
        Xn = (function () {
            function i(t, e) { this._element = t, this._config = this._getConfig(e), this._timeout = null, this._setListeners(); } const t = i.prototype; return t.show = function () { const t = this; g(this._element).trigger(Fn.SHOW), this._config.animation && this._element.classList.add(qn); const e = function () { t._element.classList.remove(Qn), t._element.classList.add(Kn), g(t._element).trigger(Fn.SHOWN), t._config.autohide && t.hide(); }; if (this._element.classList.remove(Mn), this._element.classList.add(Qn), this._config.animation) { const n = _.getTransitionDurationFromElement(this._element); g(this._element).one(_.TRANSITION_END, e).emulateTransitionEnd(n); } else e(); }, t.hide = function (t) { const e = this; this._element.classList.contains(Kn) && (g(this._element).trigger(Fn.HIDE), t ? this._close() : this._timeout = setTimeout(() => { e._close(); }, this._config.delay)); }, t.dispose = function () { clearTimeout(this._timeout), this._timeout = null, this._element.classList.contains(Kn) && this._element.classList.remove(Kn), g(this._element).off(Fn.CLICK_DISMISS), g.removeData(this._element, Un), this._element = null, this._config = null; }, t._getConfig = function (t) { return t = l({}, Vn, g(this._element).data(), typeof t === 'object' && t ? t : {}), _.typeCheckConfig(Rn, t, this.constructor.DefaultType), t; }, t._setListeners = function () { const t = this; g(this._element).on(Fn.CLICK_DISMISS, Yn, () => t.hide(!0)); }, t._close = function () {
                let t = this,
                    e = function () { t._element.classList.add(Mn), g(t._element).trigger(Fn.HIDDEN); }; if (this._element.classList.remove(Kn), this._config.animation) { const n = _.getTransitionDurationFromElement(this._element); g(this._element).one(_.TRANSITION_END, e).emulateTransitionEnd(n); } else e();
            }, i._jQueryInterface = function (n) {
                return this.each(function () {
                    let t = g(this),
                        e = t.data(Un); if (e || (e = new i(this, typeof n === 'object' && n), t.data(Un, e)), typeof n === 'string') { if (typeof e[n] === 'undefined') throw new TypeError(`No method named "${n}"`); e[n](this); }
                });
            }, s(i, null, [{ key: 'VERSION', get() { return '4.2.1'; } }, { key: 'DefaultType', get() { return Bn; } }]), i;
        }()); g.fn[Rn] = Xn._jQueryInterface, g.fn[Rn].Constructor = Xn, g.fn[Rn].noConflict = function () { return g.fn[Rn] = xn, Xn._jQueryInterface; }, (function () { if (typeof g === 'undefined') throw new TypeError("Bootstrap's JavaScript requires jQuery. jQuery must be included before Bootstrap's JavaScript."); const t = g.fn.jquery.split(' ')[0].split('.'); if (t[0] < 2 && t[1] < 9 || t[0] === 1 && t[1] === 9 && t[2] < 1 || t[0] >= 4) throw new Error("Bootstrap's JavaScript requires at least jQuery v1.9.1 but less than v4.0.0"); }()), t.Util = _, t.Alert = p, t.Button = P, t.Carousel = lt, t.Collapse = bt, t.Dropdown = Zt, t.Modal = me, t.Popover = Je, t.Scrollspy = vn, t.Tab = Hn, t.Toast = Xn, t.Tooltip = Ue, Object.defineProperty(t, '__esModule', { value: !0 });
}));
// # sourceMappingURL=bootstrap.min.js.map
